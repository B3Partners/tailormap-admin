name: Ubuntu Maven build

env:
  PG_PORT: 5432
  PG_HOST: 127.0.0.1
  DB_NAME: tailormap
  DB_USER: tailormap
  DB_PASS: tailormap
  MAIL_FROM: noreply@b3partners.nl
  MAIL_HOST: mail.b3partners.nl
  TM_DATA_DIR: /opt/tailormap_data
  #CATALINA_OPTS:

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Ubuntu Java 11 Build
    runs-on: ubuntu-20.04

    services:
      postgres:
        # docker run -h tailormap-db --name tailormap-db -it --rm -d \
        #  -e POSTGRES_USER=${DB_USER} -e POSTGRES_DB=${DB_NAME} -e POSTGRES_PASSWORD=${DB_PASS} -p 5432:5432 postgres:14.1-alpine
        image: postgres:14.1-alpine
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 15s --health-timeout 5s --health-retries 5

    steps:
      - name: ckeck database
        run: |
          psql --version
          echo ${{ env.CATALINA_OPTS }}
          PGPASSWORD=${{ env.DB_PASS }} psql -d ${{ env.DB_NAME }} -h localhost -U ${{ env.DB_USER }} -c 'SELECT Version();' || true

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Priming build with Maven
        run: mvn install -DskipTests -DskipITs -B -V -fae

      - name: Test with Maven
        run: |
          mvn -e clean test -B
          mvn -e verify -B -Pintegration-testing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

      - name: Build javadoc
        run: mvn javadoc:javadoc

      - name: Build test javadoc
        run: mvn javadoc:test-javadoc

      - name: Try Created Docker image
        #        PG_PORT=5432
        #        PG_HOST=127.0.0.1
        #        DB_NAME=tailormap
        #        DB_USER=tailormap
        #        DB_PASS=tailormap
        #        MAIL_FROM=noreply@b3partners.nl
        #        MAIL_HOST=mail.b3partners.nl
        #        TM_DATA_DIR=/opt/tailormap_data
        #        CATALINA_OPTS="-DPG_PORT=$PG_PORT -DPG_HOST=$PG_HOST -DDB_NAME=$DB_NAME -DDB_USER=$DB_USER -DDB_PASS=$DB_PASS -DMAIL_FROM=$MAIL_FROM -DMAIL_HOST=$MAIL_HOST -DTM_DATA_DIR=$TM_DATA_DIR"
        # note that the docker repo is also defined in the pom file properties as "docker.deploy.repo"
        # echo ${{ env.CATALINA_OPTS }}
        run: |
          docker run --rm -d -e CATALINA_OPTS="-DPG_PORT=${{ env.PG_PORT }} -DPG_HOST=${{ env.PG_HOST }} -DDB_NAME=${{ env.DB_NAME }} -DDB_USER=${{ env.DB_USER }} -DDB_PASS=${{ env.DB_PASS }} -DMAIL_FROM=${{ env.MAIL_FROM }} -DMAIL_HOST=${{ env.MAIL_HOST }} -DTM_DATA_DIR=${{ env.TM_DATA_DIR }}" --network host docker.b3p.nl/b3partners/tailormap-admin:snapshot
          sleep 10
          curl http://localhost:8080/tailormap-admin/action/admin/upgradecheck/ping

      - name: Cleanup snapshots
        run: |
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
